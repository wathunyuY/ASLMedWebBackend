package com.med.ods.entity;
// Generated Dec 19, 2016 4:16:39 PM by Hibernate Tools 5.1.0.Alpha1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "PERSON")
public class Person implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2414232283210168882L;
	private Integer persId;
	private String bloodType;
	private Date birthDate;
	private Date dtOfDeath;
	private Date lastUpdDttm;
	private Integer lastUpdOprid;
//	private Set<EmpInfo> empInfos = new HashSet<EmpInfo>(0);
//	private Set<PersDataEffdt> persDataEffdts = new HashSet<PersDataEffdt>(0);
//	private Set<PersRace> persRaces = new HashSet<PersRace>(0);
	private PersonCurrent personCurrent;
//	private Set<PersErPerson> persErPersons = new HashSet<PersErPerson>(0);
//	private Set<PersName> persNames = new HashSet<PersName>(0);
//	private Set<PersEduGraduation> persEduGraduations = new HashSet<PersEduGraduation>(0);
	private Set<PersLoginDevice> persLoginDevices = new HashSet<PersLoginDevice>(0);
	private PersAccount persAccount;
//	private PersErMedicalProblem persErMedicalProblem;
//	private Set<PersNationality> persNationalities = new HashSet<PersNationality>(0);
//	private Set<EvaluationPerson> evaluationPersonsForPersId = new HashSet<EvaluationPerson>(0);
//	private Set<StdntInfo> stdntInfos = new HashSet<StdntInfo>(0);
//	private Set<EmpInfoEffdt> empInfoEffdts = new HashSet<EmpInfoEffdt>(0);
//	private Set<PersPrefix> persPrefixes = new HashSet<PersPrefix>(0);
//	private Set<StdntInfoEffdt> stdntInfoEffdts = new HashSet<StdntInfoEffdt>(0);
//	private Set<EvaluationPerson> evaluationPersonsForEvaluatorPersId = new HashSet<EvaluationPerson>(0);
//	private PersNid persNid;
//	private PersReligion persReligion;
//	private Set<PersPicture> persPictures = new HashSet<PersPicture>(0);
//	private Set<PersAddress> persAddresses = new HashSet<PersAddress>(0);
//	private Set<PersMedicalHistory> persMedicalHistories = new HashSet<PersMedicalHistory>(0);
//	private Set<EvaluationTeacherPool> evaluationTeacherPools = new HashSet<EvaluationTeacherPool>(
//			0);
//	private Set<ApplicationFormTbl> applicationFormTbls = new HashSet<ApplicationFormTbl>(0);
//	private Set<ApplicationFormApprover> applicationFormApprovers = new HashSet<ApplicationFormApprover>(0);
//	private Set<NotiPoolScheduleTopic> notiPoolScheduleTopics = new HashSet<NotiPoolScheduleTopic>(0);
//	private Set<PermsDataByOrgPers> permsDataByOrgPerses = new HashSet<PermsDataByOrgPers>(0);
//	private Set<NotiUnsubscrTemp> notiUnsubscrTemps = new HashSet<NotiUnsubscrTemp>(0);
//	private Set<EvaMapping> evaMappingsForEvaluated = new HashSet<EvaMapping>(0);
//	private Set<EvaMapping> evaMappingsForEvaluator = new HashSet<EvaMapping>(0);

	public Person() {
	}

	public Person(String bloodType, Date birthDate, Date dtOfDeath, Date lastUpdDttm, Integer lastUpdOprid/*,
			Set<ApplicationFormTbl> applicationFormTbls, Set<EmpInfo> empInfos, Set<PersDataEffdt> persDataEffdts,
			*/,PersonCurrent personCurrent/*, Set<PersErPerson> persErPersons, Set<PersName> persNames,
			Set<NotiPoolScheduleTopic> notiPoolScheduleTopics, Set<PersEduGraduation> persEduGraduations,
			*/,Set<PersLoginDevice> persLoginDevices, PersAccount persAccount/*, Set<PersNationality> persNationalities,
			Set<EvaluationPerson> evaluationPersonsForPersId, Set<StdntInfo> stdntInfos,
			Set<EvaluationPerson> evaluationPersonsForEvaluatorPersId, PersNid persNid, PersReligion persReligion,
			Set<PersPicture> persPictures,
			Set<EvaluationTeacherPool> evaluationTeacherPools, Set<PersRace> persRaces,Set<EvaMapping> evaMappingsForEvaluated, Set<EvaMapping> evaMappingsForEvaluator,
			Set<ApplicationFormApprover> applicationFormApprovers, PersErMedicalProblem persErMedicalProblem,
			Set<NotiUnsubscrTemp> notiUnsubscrTemps, Set<EmpInfoEffdt> empInfoEffdts, Set<PersPrefix> persPrefixes,
			Set<StdntInfoEffdt> stdntInfoEffdts, Set<PermsDataByOrgPers> permsDataByOrgPerses,
			Set<PersAddress> persAddresses, Set<PersMedicalHistory> persMedicalHistories*/) {
		this.bloodType = bloodType;
		this.birthDate = birthDate;
		this.dtOfDeath = dtOfDeath;
		this.lastUpdDttm = lastUpdDttm;
		this.lastUpdOprid = lastUpdOprid;
//		this.applicationFormTbls = applicationFormTbls;
//		this.empInfos = empInfos;
//		this.persDataEffdts = persDataEffdts;
		this.personCurrent = personCurrent;
//		this.persErPersons = persErPersons;
//		this.persNames = persNames;
//		this.notiPoolScheduleTopics = notiPoolScheduleTopics;
//		this.persEduGraduations = persEduGraduations;
		this.persLoginDevices = persLoginDevices;
		this.persAccount = persAccount;
//		this.persNationalities = persNationalities;
//		this.evaluationPersonsForPersId = evaluationPersonsForPersId;
//		this.stdntInfos = stdntInfos;
//		this.evaluationPersonsForEvaluatorPersId = evaluationPersonsForEvaluatorPersId;
//		this.persNid = persNid;
//		this.persReligion = persReligion;
//		this.persPictures = persPictures;
//		this.evaluationTeacherPools = evaluationTeacherPools;
//		this.persRaces = persRaces;
//		this.applicationFormApprovers = applicationFormApprovers;
//		this.persErMedicalProblem = persErMedicalProblem;
//		this.notiUnsubscrTemps = notiUnsubscrTemps;
//		this.empInfoEffdts = empInfoEffdts;
//		this.persPrefixes = persPrefixes;
//		this.stdntInfoEffdts = stdntInfoEffdts;
//		this.permsDataByOrgPerses = permsDataByOrgPerses;
//		this.persAddresses = persAddresses;
//		this.persMedicalHistories = persMedicalHistories;
//		this.evaMappingsForEvaluator = evaMappingsForEvaluator;
//		this.evaMappingsForEvaluated = evaMappingsForEvaluated;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "PERS_ID", unique = true, nullable = false)
	public Integer getPersId() {
		return this.persId;
	}

	public void setPersId(Integer persId) {
		this.persId = persId;
	}

	@Column(name = "BLOOD_TYPE", length = 45)
	public String getBloodType() {
		return this.bloodType;
	}

	public void setBloodType(String bloodType) {
		this.bloodType = bloodType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "BIRTH_DATE", length = 10)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DT_OF_DEATH", length = 10)
	public Date getDtOfDeath() {
		return this.dtOfDeath;
	}

	public void setDtOfDeath(Date dtOfDeath) {
		this.dtOfDeath = dtOfDeath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPD_DTTM", length = 19)
	public Date getLastUpdDttm() {
		return this.lastUpdDttm;
	}

	public void setLastUpdDttm(Date lastUpdDttm) {
		this.lastUpdDttm = lastUpdDttm;
	}

	@Column(name = "LAST_UPD_OPRID")
	public Integer getLastUpdOprid() {
		return this.lastUpdOprid;
	}

	public void setLastUpdOprid(Integer lastUpdOprid) {
		this.lastUpdOprid = lastUpdOprid;
	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<EmpInfo> getEmpInfos() {
//		return this.empInfos;
//	}
//
//	public void setEmpInfos(Set<EmpInfo> empInfos) {
//		this.empInfos = empInfos;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersDataEffdt> getPersDataEffdts() {
//		return this.persDataEffdts;
//	}
//
//	public void setPersDataEffdts(Set<PersDataEffdt> persDataEffdts) {
//		this.persDataEffdts = persDataEffdts;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersRace> getPersRaces() {
//		return this.persRaces;
//	}
//
//	public void setPersRaces(Set<PersRace> persRaces) {
//		this.persRaces = persRaces;
//	}
//
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
	public PersonCurrent getPersonCurrent() {
		return this.personCurrent;
	}

	public void setPersonCurrent(PersonCurrent personCurrent) {
		this.personCurrent = personCurrent;
	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersErPerson> getPersErPersons() {
//		return this.persErPersons;
//	}
//
//	public void setPersErPersons(Set<PersErPerson> persErPersons) {
//		this.persErPersons = persErPersons;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersName> getPersNames() {
//		return this.persNames;
//	}
//
//	public void setPersNames(Set<PersName> persNames) {
//		this.persNames = persNames;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersEduGraduation> getPersEduGraduations() {
//		return this.persEduGraduations;
//	}
//
//	public void setPersEduGraduations(Set<PersEduGraduation> persEduGraduations) {
//		this.persEduGraduations = persEduGraduations;
//	}
//	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<PersLoginDevice> getPersLoginDevices() {
		return this.persLoginDevices;
	}

	public void setPersLoginDevices(Set<PersLoginDevice> persLoginDevices) {
		this.persLoginDevices = persLoginDevices;
	}
//
	@OneToOne(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL, optional = false)
	public PersAccount getPersAccount() {
		return this.persAccount;
	}

	public void setPersAccount(PersAccount persAccount) {
		this.persAccount = persAccount;
	}
//	
//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "person",optional = false )
//	public PersErMedicalProblem getPersErMedicalProblem() {
//		return this.persErMedicalProblem;
//	}
//
//	public void setPersErMedicalProblem(PersErMedicalProblem persErMedicalProblem) {
//		this.persErMedicalProblem = persErMedicalProblem;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersNationality> getPersNationalities() {
//		return this.persNationalities;
//	}
//
//	public void setPersNationalities(Set<PersNationality> persNationalities) {
//		this.persNationalities = persNationalities;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personByPersId")
//	public Set<EvaluationPerson> getEvaluationPersonsForPersId() {
//		return this.evaluationPersonsForPersId;
//	}
//
//	public void setEvaluationPersonsForPersId(Set<EvaluationPerson> evaluationPersonsForPersId) {
//		this.evaluationPersonsForPersId = evaluationPersonsForPersId;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<StdntInfo> getStdntInfos() {
//		return this.stdntInfos;
//	}
//
//	public void setStdntInfos(Set<StdntInfo> stdntInfos) {
//		this.stdntInfos = stdntInfos;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<EmpInfoEffdt> getEmpInfoEffdts() {
//		return this.empInfoEffdts;
//	}
//
//	public void setEmpInfoEffdts(Set<EmpInfoEffdt> empInfoEffdts) {
//		this.empInfoEffdts = empInfoEffdts;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersPrefix> getPersPrefixes() {
//		return this.persPrefixes;
//	}
//
//	public void setPersPrefixes(Set<PersPrefix> persPrefixes) {
//		this.persPrefixes = persPrefixes;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<StdntInfoEffdt> getStdntInfoEffdts() {
//		return this.stdntInfoEffdts;
//	}
//
//	public void setStdntInfoEffdts(Set<StdntInfoEffdt> stdntInfoEffdts) {
//		this.stdntInfoEffdts = stdntInfoEffdts;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personByEvaluatorPersId")
//	public Set<EvaluationPerson> getEvaluationPersonsForEvaluatorPersId() {
//		return this.evaluationPersonsForEvaluatorPersId;
//	}
//
//	public void setEvaluationPersonsForEvaluatorPersId(Set<EvaluationPerson> evaluationPersonsForEvaluatorPersId) {
//		this.evaluationPersonsForEvaluatorPersId = evaluationPersonsForEvaluatorPersId;
//	}
//
//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL, optional = false)
//	public PersNid getPersNid() {
//		return this.persNid;
//	}
//
//	public void setPersNid(PersNid persNid) {
//		this.persNid = persNid;
//	}
//
//	@OneToOne(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL, optional = false)
//	public PersReligion getPersReligion() {
//		return this.persReligion;
//	}
//
//	public void setPersReligion(PersReligion persReligion) {
//		this.persReligion = persReligion;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersPicture> getPersPictures() {
//		return this.persPictures;
//	}
//
//	public void setPersPictures(Set<PersPicture> persPictures) {
//		this.persPictures = persPictures;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person", cascade = CascadeType.ALL)
//	public Set<PersAddress> getPersAddresses() {
//		return this.persAddresses;
//	}
//
//	public void setPersAddresses(Set<PersAddress> persAddresses) {
//		this.persAddresses = persAddresses;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<PersMedicalHistory> getPersMedicalHistories() {
//		return this.persMedicalHistories;
//	}
//
//	public void setPersMedicalHistories(Set<PersMedicalHistory> persMedicalHistories) {
//		this.persMedicalHistories = persMedicalHistories;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<EvaluationTeacherPool> getEvaluationTeacherPools() {
//		return this.evaluationTeacherPools;
//	}
//
//	public void setEvaluationTeacherPools(
//			Set<EvaluationTeacherPool> evaluationTeacherPools) {
//		this.evaluationTeacherPools = evaluationTeacherPools;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<ApplicationFormApprover> getApplicationFormApprovers() {
//		return this.applicationFormApprovers;
//	}
//
//	public void setApplicationFormApprovers(Set<ApplicationFormApprover> applicationFormApprovers) {
//		this.applicationFormApprovers = applicationFormApprovers;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<ApplicationFormTbl> getApplicationFormTbls() {
//		return this.applicationFormTbls;
//	}
//
//	public void setApplicationFormTbls(Set<ApplicationFormTbl> applicationFormTbls) {
//		this.applicationFormTbls = applicationFormTbls;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<NotiPoolScheduleTopic> getNotiPoolScheduleTopics() {
//		return this.notiPoolScheduleTopics;
//	}
//
//	public void setNotiPoolScheduleTopics(Set<NotiPoolScheduleTopic> notiPoolScheduleTopics) {
//		this.notiPoolScheduleTopics = notiPoolScheduleTopics;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<PermsDataByOrgPers> getPermsDataByOrgPerses() {
//		return this.permsDataByOrgPerses;
//	}
//
//	public void setPermsDataByOrgPerses(Set<PermsDataByOrgPers> permsDataByOrgPerses) {
//		this.permsDataByOrgPerses = permsDataByOrgPerses;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
//	public Set<NotiUnsubscrTemp> getNotiUnsubscrTemps() {
//		return this.notiUnsubscrTemps;
//	}
//
//	public void setNotiUnsubscrTemps(Set<NotiUnsubscrTemp> notiUnsubscrTemps) {
//		this.notiUnsubscrTemps = notiUnsubscrTemps;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personByEvaluator")
//	public Set<EvaMapping> getEvaMappingsForEvaluator() {
//		return this.evaMappingsForEvaluator;
//	}
//
//	public void setEvaMappingsForEvaluator(Set<EvaMapping> evaMappingsForEvaluator) {
//		this.evaMappingsForEvaluator = evaMappingsForEvaluator;
//	}
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personByEvaluated")
//	public Set<EvaMapping> getEvaMappingsForEvaluated() {
//		return this.evaMappingsForEvaluated;
//	}
//
//	public void setEvaMappingsForEvaluated(Set<EvaMapping> evaMappingsForEvaluated) {
//		this.evaMappingsForEvaluated = evaMappingsForEvaluated;
//	}
}
